# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build pnpm and push to ACR

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
#   linter:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#       with:
#           fetch-depth: 100
#     - uses: actions/setup-node@v2
#       with:
#         node-version: '16'
#     - uses: pnpm/action-setup@v2.0.1
#       with:
#         version: 6.15.0

#     - name: Install Dependencies
#       run: pnpm install

#     - name: Run Linter
#       run: pnpm run lint --filter @eratos/app

#   build-and-push:
#     runs-on: ubuntu-latest
#     needs: linter
#     steps:
#     - uses: actions/checkout@v2

#     - name: Azure Login
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     - name: Azure Container Registry Login
#       uses: Azure/docker-login@v1
#       with:
#         login-server: eratos.azurecr.io
#         username: ${{ secrets.ACR_USERNAME }}
#         password: ${{ secrets.ACR_PASSWORD }}

#     - name: Build the Docker image and push to ACR
#       run: |
#         docker build -t eratos.azurecr.io/monorepo-test-ci:latest .
#         docker push eratos.azurecr.io/monorepo-test-ci:latest

  deploy:
    runs-on: ubuntu-latest
#     needs: build-and-push
    steps:
    - uses: actions/checkout@v2

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

    - name: Helm Deploy
      uses: netf/helm-eks-action@v1
#       env:
#         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        cluster-name: eratos-eks-aT2MeVfg
#         command: helm upgrade release1 --install --wait monorepo-chart -f monorepo-chart/values.yaml
        command: helm ls

    - name: Get URL
      id: url
      uses: netf/helm-eks-action@v1
#       env:
#         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        cluster-name: eratos-eks-aT2MeVfg
        command: kubectl get svc my_svc -o json | jq -r '.status.loadBalancer.ingress[0].hostname'
    
    - name: Print Response
      run: echo "Response was ${{ steps.url.outputs.response }}"
