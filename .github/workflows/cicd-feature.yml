# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Feature Environment

on:
  pull_request:
    branches: [ develop ]
    types: [opened, reopened, synchronize, closed]
  workflow_dispatch:

env:
  PR_NUMBER: ${{ github.event.number }}

jobs:
  build-and-push:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set docker image tag env var
      run: echo "TAG=$(echo pr-$PR_NUMBER)" >> $GITHUB_ENV

    - name: Set tag output
      id: set-tag-output
      run: echo "::set-output name=tag::$TAG"

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        login-server: eratos.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build Docker image and push to ACR
      run: |
        docker build -t eratos.azurecr.io/monorepo-test-ci:$TAG .
        docker push eratos.azurecr.io/monorepo-test-ci:$TAG

    outputs:
      tag: ${{ steps.set-tag-output.outputs.tag }}

  new-deployment:
    if: github.event.pull_request.merged == false && (github.event.action == 'opened' || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - uses: actions/checkout@v2

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Update Helm chart values.yaml
      uses: mikefarah/yq@master
      with:
        cmd: IMAGE_TAG=${{ needs.build-and-push.outputs.tag }} HOST="${{ needs.build-and-push.outputs.tag }}.dev.eratos.com" SELECTOR_LABEL="monorepo-test-${{ needs.build-and-push.outputs.tag }}" yq e -i '.image.tag = env(IMAGE_TAG) | .ingress.hosts[0].host = env(HOST) | .selectorLabel = env(SELECTOR_LABEL) | .name = env(SELECTOR_LABEL)' monorepo-chart/values.yaml

    - name: Helm deploy to EKS
      uses: netf/helm-eks-action@v1
      with:
        cluster-name: eratos-eks-kYFydEzM
        command: helm install ${{ needs.build-and-push.outputs.tag }} --wait monorepo-chart -f monorepo-chart/values.yaml

  update-deployment:
    if: github.event.pull_request.merged == false && github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - uses: actions/checkout@v2

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Update Helm chart values.yaml
      uses: mikefarah/yq@master
      with:
        cmd: IMAGE_TAG=${{ needs.build-and-push.outputs.tag }} HOST="${{ needs.build-and-push.outputs.tag }}.dev.eratos.com" SELECTOR_LABEL="monorepo-test-${{ needs.build-and-push.outputs.tag }}" yq e -i '.image.tag = env(IMAGE_TAG) | .ingress.hosts[0].host = env(HOST) | .selectorLabel = env(SELECTOR_LABEL) | .name = env(SELECTOR_LABEL)' monorepo-chart/values.yaml

    - name: Helm deploy to EKS
      uses: netf/helm-eks-action@v1
      with:
        cluster-name: eratos-eks-kYFydEzM
        command: helm upgrade ${{ needs.build-and-push.outputs.tag }} --install --wait monorepo-chart -f monorepo-chart/values.yaml

  uninstall:
    if: github.event.pull_request.merged == true && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get PR tag
      run: echo "TAG=$(echo pr-$PR_NUMBER)" >> $GITHUB_ENV

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Uninstall Helm chart release deploy to EKS
      uses: netf/helm-eks-action@v1
      with:
        cluster-name: eratos-eks-kYFydEzM
        command: helm uninstall $TAG
